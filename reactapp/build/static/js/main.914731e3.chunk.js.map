{"version":3,"sources":["components/Navbar.js","pages/Freespeech.js","pages/Signup.js","pages/Login.js","pages/Welcome.js","pages/Logout.js","pages/Error404.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","state","style","flexGrow","AppBar","position","color","Toolbar","variant","Typography","this","isSignedIn","to","Button","Component","Freespeech","speechItems","text","voiceId","voices","SpeechSynth","getVoices","utterThis","SpeechSynthesisUtterance","voice","speak","fetch","window","location","protocol","hostname","port","method","headers","accessToken","then","res","json","data","error","setState","submitable","message","catch","console","log","cancel","theme","Nested","withStyles","root","display","margin","spacing","width","height","classes","map","speechItem","Grid","item","xs","sm","md","lg","xl","className","Paper","id","container","Signup","toLogin","handleInputChange","bind","onSubmit","e","preventDefault","JSON","stringify","body","event","target","value","type","sha256","toLowerCase","name","Container","component","maxWidth","flexDirection","alignItems","TextField","required","fullWidth","label","autoComplete","onChange","inputProps","pattern","title","disabled","justify","Link","href","Login","update","refreshToken","preferredVoiceId","marginTop","hidden","Welcome","Error404","App","createMuiTheme","palette","CssBaseline","path","exact","speechSynthesis","Logout","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.914731e3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nclass Navbar extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div style={{flexGrow:1}}>\r\n\t\t\t\t<AppBar position=\"static\" color=\"inherit\">\r\n\t\t\t\t\t<Toolbar variant=\"dense\">\r\n\t          <Typography variant=\"h6\" style={{flexGrow:1}} >Freespeech</Typography>\r\n\t\t\t\t\t\t{!this.props.isSignedIn ? (\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<NavLink to='/signup' >\r\n\t\t\t\t\t\t\t\t\t\t<Button>Signup</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t\t<NavLink to='/login' >\r\n\t\t\t\t\t\t\t\t\t\t<Button>Login</Button>\r\n\t\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t):(\r\n\t\t\t\t\t\t\t\t<NavLink to='/logout' >\r\n\t\t\t\t\t\t\t\t\t<Button>Logout</Button>\r\n\t\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t        </Toolbar>\r\n\t      </AppBar>\r\n\t    </div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid, Paper, Card, CardContent } from '@material-ui/core';\r\n\r\nclass Freespeech extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n\t\t\tspeechItems:[]\r\n    }\r\n  }\r\n\r\n\tspeakText(text, voiceId){\r\n\t\tlet voices = this.props.SpeechSynth.getVoices();\r\n\t\tlet utterThis = new SpeechSynthesisUtterance(text);\r\n\t\tutterThis.voice = voices[voiceId];\r\n\t\tthis.props.SpeechSynth.speak(utterThis);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.isSignedIn){\r\n\t\t\tfetch(window.location.protocol+'//'+window.location.hostname+(window.location.port ? ':'+window.location.port: '')+\"/speechItems\", {\r\n\t\t\t\tmethod:\"GET\",\r\n\t      headers: {\r\n\t        'Accept': 'application/json',\r\n\t    \t\t'Content-Type': 'application/json',\r\n\t\t\t\t\t'Authorization': 'Bearer ' + this.props.accessToken,\r\n\t      }\r\n\t    }).then(res => res.json()).then((data) => {\r\n\t\t\t\tif(!data.error){\r\n\t\t\t\t\tthis.setState({speechItems:data})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.setState({submitable:true, message:data.error});\r\n\t\t\t\t}\r\n\t    }).catch(console.log);\r\n\t\t}\r\n  }\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.SpeechSynth.cancel();\r\n  }\r\n\r\n  render () {\r\n\t\tconst theme = this.props.theme;\r\n\t\tconst Nested = withStyles({\r\n\t\t\troot: {\r\n\t\t    display: 'flex',\r\n\t\t    '& > *': {\r\n\t\t      margin: theme.spacing(1),\r\n\t\t      width: theme.spacing(16),\r\n\t\t      height: theme.spacing(16),\r\n\t\t    },\r\n\t\t  },\r\n\t\t})(({ classes }) => {\r\n\t\t\treturn this.state.speechItems.map((speechItem)=>{\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid item xs={12} sm={3} md={2} lg={2} xl={2} className={classes.root}>\r\n\t\t      \t<Paper variant=\"outlined\" id={speechItem.id}>{speechItem.text}</Paper>\r\n\t\t    \t</Grid>\r\n\t\t\t\t)\r\n\t\t\t});\r\n\t\t});\r\n\t\t// const SpeechItems = this.state.speechItems.map((speechItem)=>{ return ( <SpeechItem key={person.name} person={person} /> ) });\r\n\r\n\t\tif(!this.props.isSignedIn){\r\n\t\t\treturn <Redirect to='/login'/>;\r\n\t\t}\r\n\r\n    return (\r\n\t\t\t<Grid container>\r\n\t\t\t\t<Nested />\r\n\t\t\t</Grid>\r\n\t\t)\r\n  }\r\n}\r\n\r\nexport default Freespeech\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Typography, Grid, TextField, Button, Link } from '@material-ui/core';\r\nimport { sha256 } from 'js-sha256';\r\n\r\nclass Signup extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tsubmitable:true,\r\n\t\t\tmessage:\"\",\r\n\t\t\ttoLogin:false,\r\n\t\t}\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\tonSubmit(e) {\r\n    e.preventDefault();\r\n\t\tthis.setState({submitable:false});\r\n\t\tconsole.log(JSON.stringify(this.state));\r\n    fetch(window.location.protocol+'//'+window.location.hostname+(window.location.port ? ':'+window.location.port: '')+\"/signup\", {\r\n\t\t\tmethod:\"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n    \t\t'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state)\r\n    }).then(res => res.json()).then((data) => {\r\n\t\t\tif(!data.error){\r\n\t\t\t\tthis.setState({toLogin:true})\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({submitable:true, message:data.error});\r\n\t\t\t}\r\n    }).catch(console.log);\r\n  }\r\n\r\n\thandleInputChange(event) {\r\n    const target = event.target;\r\n    const value = (target.type === 'password')?sha256(target.value):target.value.toLowerCase();\r\n    const name = target.name;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\trender () {\r\n\t\tif(this.props.isSignedIn){\r\n\t\t\treturn <Redirect to='/home'/>;\r\n\t\t}\r\n\t\tif(this.state.toLogin){\r\n\t\t\treturn <Redirect to='/login'/>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <Typography component=\"h1\" variant=\"h3\">Sign up</Typography>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"secondary\">{this.state.message}</Typography><br />\r\n        <form style={{width: '100%'}} onSubmit={this.onSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"name\" label=\"Full Name\" name=\"name\" autoComplete=\"name\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"username\" label=\"Username\" name=\"username\" autoComplete=\"username\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth id=\"email\" label=\"Email\" name=\"email\" autoComplete=\"email\" type=\"email\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth name=\"password\" inputProps={{ pattern:\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\", title:\"Password required to be a minimum of eight in length with one uppercase letter, one lowercase letter, one number, and one special character\"}} label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"passowrd\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth name=\"repassword\" inputProps={{ pattern:\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\"}} label=\"Re-type Password\" type=\"password\" id=\"repassword\" autoComplete=\"password\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n          </Grid><br />\r\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" disabled={!this.state.submitable}>Sign Up</Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/login\" variant=\"body2\" color=\"inherit\">Already have an account? Sign in</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n\t\t\t</Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Signup\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Typography, Grid, TextField, Button, Link } from '@material-ui/core';\r\nimport { sha256 } from 'js-sha256';\r\n\r\nclass Login extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tsubmitable:true,\r\n\t\t\tmessage:\"\",\r\n\t\t}\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.onSubmit = this.onSubmit.bind(this);\r\n\t}\r\n\r\n\tonSubmit(e) {\r\n    e.preventDefault();\r\n\t\tthis.setState({submitable:false});\r\n    fetch(window.location.protocol+'//'+window.location.hostname+(window.location.port ? ':'+window.location.port: '')+\"/login\", {\r\n\t\t\tmethod:\"POST\",\r\n      headers: {\r\n        'Accept': 'application/json',\r\n    \t\t'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(this.state)\r\n    }).then(res => res.json()).then((data) => {\r\n\t\t\tif(!data.error){\r\n\t      this.props.update(true, data.accessToken, data.refreshToken, data.preferredVoiceId);\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({submitable:true, message:data.error});\r\n\t\t\t}\r\n    }).catch(console.log);\r\n  }\r\n\r\n\thandleInputChange(event) {\r\n    const target = event.target;\r\n    const value = (target.type === 'password')?sha256(target.value):target.value;\r\n    const name = target.name;\r\n    this.setState({ [name]: value });\r\n  }\r\n\r\n\trender () {\r\n\t\tif(this.props.isSignedIn){\r\n\t\t\treturn <Redirect to='/home'/>;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n      <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n        <Typography component=\"h1\" variant=\"h3\" style={{marginTop:'5px'}}>Login</Typography>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h6\" color=\"secondary\">{this.state.message}</Typography><br />\r\n        <form id=\"loginform\" onSubmit={this.onSubmit} style={{width: '100%'}}>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField variant=\"outlined\" required fullWidth id=\"username\" label=\"Username\" name=\"username\" autoComplete=\"username\" onChange={this.handleInputChange} />\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n              <TextField variant=\"outlined\" required fullWidth name=\"password\" label=\"Password\" type=\"password\" id=\"password\" autoComplete=\"password\" onChange={this.handleInputChange} />\r\n            </Grid>\r\n          </Grid><br />\r\n\t          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" disabled={!this.state.submitable}>Login</Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" hidden variant=\"body2\" color=\"inherit\">Forgot password?</Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"/signup\" variant=\"body2\" color=\"inherit\">{\"Don't have an account? Sign Up\"}</Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\n\r\nclass Welcome extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>MyComponent</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Welcome\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { sha256 } from 'js-sha256';\r\n\r\nclass Login extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\tthis.props.update(false,\"\",\"\",0);\r\n\t\treturn (\r\n\t\t\t<Redirect to=\"/login\" />\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Login\r\n","import React, { Component } from 'react'\r\n\r\nclass Error404 extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>Error 404</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Error404\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Container } from '@material-ui/core';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Navbar from './components/Navbar';\nimport Freespeech from './pages/Freespeech';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport Welcome from './pages/Welcome';\nimport Logout from './pages/Logout';\nimport Error404 from './pages/Error404';\n\nclass App extends Component {\n\tconstructor (props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tisSignedIn:false,\n\t\t\taccessToken:\"\",\n\t\t\trefreshToken:\"\",\n\t\t\tpreferredVoiceId:0,\n\t\t}\n\t\tthis.update = this.update.bind(this);\n\t}\n\n\tupdate(isSignedIn, accessToken, refreshToken, preferredVoiceId){\n\t\tthis.setState({isSignedIn:isSignedIn, accessToken:accessToken, refreshToken:refreshToken, preferredVoiceId:preferredVoiceId});\n\t}\n\n\trender () {\n\t\tconst theme = createMuiTheme({\n\t\t  palette: {\n\t\t    type: 'dark',\n\t\t  },\n\t\t});\n\n\t\treturn (\n\t\t\t<MuiThemeProvider theme={theme}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Router>\n\t\t\t\t\t<Navbar isSignedIn={this.state.isSignedIn}/>\n\t\t\t\t\t<Container><br />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route path=\"/\" exact component={Welcome} />\n\t\t\t\t\t\t\t<Route path=\"/home\" ><Freespeech theme={theme} isSignedIn={this.state.isSignedIn} accessToken={this.state.accessToken} refreshToken={this.state.refreshToken}  SpeechSynth={window.speechSynthesis} /></Route>\n\t\t\t\t\t\t\t<Route path=\"/signup\"><Signup isSignedIn={this.state.isSignedIn} /></Route>\n\t\t\t\t\t\t\t<Route path=\"/login\" ><Login update={this.update} isSignedIn={this.state.isSignedIn}/></Route>\n\t\t\t\t\t\t\t<Route path=\"/logout\" ><Logout update={this.update} isSignedIn={this.state.isSignedIn} /></Route>\n\t\t\t\t\t\t\t<Route path=\"*\" component={Error404} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Container>\n\t\t\t\t</Router>\n\t\t\t</MuiThemeProvider >\n\t\t)\n\t}\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}