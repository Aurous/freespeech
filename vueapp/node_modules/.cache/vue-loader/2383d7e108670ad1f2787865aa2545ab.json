{"remainingRequest":"/Users/macbookpro/Desktop/freespeech/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Desktop/freespeech/src/views/Settings.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Desktop/freespeech/src/views/Settings.vue","mtime":1581961923841},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {mapActions, mapGetters} from 'vuex';\n\nconst VOICES = window.speechSynthesis.getVoices();\n\nlet voiceOptions = (VOICES.map((voice, index) => {\n    return {text: `${voice.name} (${voice.lang})`, value: index}\n})).sort((a,b) => a.text.localeCompare(b.text));\n\nexport default {\n    \n    name:\"Settings\",\n    data () {\n        return {\n        dialog: true,\n        voiceOptions,\n        voices: VOICES\n        }      \n    },\n    computed: {\n        ...mapGetters(['settingsDialogVisibility']),\n        selectedVoiceIndex: {\n            get(){\n                let voiceIndex = this.$store.state.selectedVoiceIndex;\n                return voiceOptions.filter(x => x.value === voiceIndex)[0];\n            },\n            set(value){            \n                this.setselectedVoiceIndex(value);\n            }\n        }  \n        },\n        methods: {\n            ...mapActions(['setselectedVoiceIndex','toggleSettingsDialogVisibility'])\n        }\n}\n",{"version":3,"sources":["Settings.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Settings.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-dialog\n    v-model=\"settingsDialogVisibility\"\n    persistent\n    max-width=\"600px\"\n  >\n    <v-card>\n      <v-card-title>\n        <span class=\"headline\">Settings</span>\n      </v-card-title>\n      <v-card-text>\n        <v-container>\n          <v-row>\n            <v-col cols=\"12\">\n              <v-select\n                :items=\"voiceOptions\"\n                label=\"Voice\"\n                v-model=\"selectedVoiceIndex\"\n              />\n            </v-col>\n          </v-row>\n        </v-container>\n      </v-card-text>\n      <v-card-actions>\n        <v-spacer />\n        <v-btn\n          color=\"blue darken-1\"\n          text\n          @click=\"toggleSettingsDialogVisibility\"\n        >\n          Close\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport {mapActions, mapGetters} from 'vuex';\n\nconst VOICES = window.speechSynthesis.getVoices();\n\nlet voiceOptions = (VOICES.map((voice, index) => {\n    return {text: `${voice.name} (${voice.lang})`, value: index}\n})).sort((a,b) => a.text.localeCompare(b.text));\n\nexport default {\n    \n    name:\"Settings\",\n    data () {\n        return {\n        dialog: true,\n        voiceOptions,\n        voices: VOICES\n        }      \n    },\n    computed: {\n        ...mapGetters(['settingsDialogVisibility']),\n        selectedVoiceIndex: {\n            get(){\n                let voiceIndex = this.$store.state.selectedVoiceIndex;\n                return voiceOptions.filter(x => x.value === voiceIndex)[0];\n            },\n            set(value){            \n                this.setselectedVoiceIndex(value);\n            }\n        }  \n        },\n        methods: {\n            ...mapActions(['setselectedVoiceIndex','toggleSettingsDialogVisibility'])\n        }\n}\n</script>\n"]}]}