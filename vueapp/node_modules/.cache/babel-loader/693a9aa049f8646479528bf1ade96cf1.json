{"remainingRequest":"/Users/macbookpro/Desktop/freespeech/node_modules/babel-loader/lib/index.js!/Users/macbookpro/Desktop/freespeech/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/macbookpro/Desktop/freespeech/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/macbookpro/Desktop/freespeech/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/macbookpro/Desktop/freespeech/src/components/TilePad/Tile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/macbookpro/Desktop/freespeech/src/components/TilePad/Tile.vue","mtime":1581961923839},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/macbookpro/Desktop/freespeech/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Tile\",\n  props: {\n    tileData: {\n      type: Object,\n      default: Object\n    }\n  },\n  computed: {\n    cardColor: function cardColor() {\n      var cardHexColor;\n\n      switch (this.tileData.accent) {\n        case \"red\":\n          cardHexColor = \"#FF9AA2\";\n          break;\n\n        case \"blush\":\n          cardHexColor = \"#FFB7B2\";\n          break;\n\n        case \"peach\":\n          cardHexColor = \"#FFB7B2\";\n          break;\n\n        case \"pear\":\n          cardHexColor = \"#E2F0CB\";\n          break;\n\n        case \"mint\":\n          cardHexColor = \"#B5EAD7\";\n          break;\n\n        case \"violet\":\n          cardHexColor = \"#C7CEEA\";\n          break;\n\n        default:\n          cardHexColor = \"\";\n          break;\n      }\n\n      return cardHexColor;\n    }\n  },\n  methods: {\n    tileClickedEvent: function tileClickedEvent() {\n      if (typeof this.tileData.navigation === 'undefined' || this.tileData.navigation === '') {\n        this.$emit('speakText', this.tileData.text);\n      } else {\n        this.$router.push({\n          name: 'tilePadWithRoute',\n          params: {\n            layout: this.tileData.navigation\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Tile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GAFA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,YAAA;;AAEA,cAAA,KAAA,QAAA,CAAA,MAAA;AACA,aAAA,KAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,OAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,OAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,MAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,MAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA,aAAA,QAAA;AACA,UAAA,YAAA,GAAA,SAAA;AACA;;AACA;AACA,UAAA,YAAA,GAAA,EAAA;AACA;AArBA;;AAuBA,aAAA,YAAA;AACA;AA5BA,GAPA;AAqCA,EAAA,OAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,UAAA,OAAA,KAAA,QAAA,CAAA,UAAA,KAAA,WAAA,IAAA,KAAA,QAAA,CAAA,UAAA,KAAA,EAAA,EACA;AACA,aAAA,KAAA,CAAA,WAAA,EAAA,KAAA,QAAA,CAAA,IAAA;AACA,OAHA,MAGA;AACA,aAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,kBAAA;AAAA,UAAA,MAAA,EAAA;AAAA,YAAA,MAAA,EAAA,KAAA,QAAA,CAAA;AAAA;AAAA,SAAA;AACA;AACA;AARA;AArCA,CAAA","sourcesContent":["<template>\r\n  <v-card\r\n    raised\r\n    tile\r\n    class=\"mx-auto\"\r\n    @click=\"tileClickedEvent\"\r\n    :color=\"typeof tileData.accent === 'undefined' ? '' : cardColor\"\r\n  >\r\n    <v-container\r\n      justify=\"\r\n    center\"\r\n    >\r\n      <v-row\r\n        align=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <v-img\r\n          max-height=\"32\"\r\n          max-width=\"32\"\r\n          aspect-ratio=\"1\"\r\n          :src=\"tileData.image\"\r\n        />\r\n      </v-row>\r\n      <v-row>\r\n        <v-card-text\r\n          class=\"\"\r\n          align=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <h3> {{ tileData.name }} </h3>\r\n        </v-card-text>\r\n      </v-row>\r\n    </v-container>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: \"Tile\",\r\n  props: {\r\n    tileData: {\r\n      type: Object,\r\n      default: Object\r\n    }\r\n  }, computed: {\r\n        cardColor: function(){\r\n            let cardHexColor;\r\n\r\n            switch(this.tileData.accent) {\r\n                case \"red\":\r\n                    cardHexColor = \"#FF9AA2\";\r\n                    break;\r\n                case \"blush\":\r\n                    cardHexColor = \"#FFB7B2\";\r\n                    break;\r\n                case \"peach\":\r\n                    cardHexColor = \"#FFB7B2\";\r\n                    break;\r\n                case \"pear\":\r\n                    cardHexColor = \"#E2F0CB\";\r\n                    break;\r\n                case \"mint\":\r\n                    cardHexColor = \"#B5EAD7\";\r\n                    break;\r\n                case \"violet\":\r\n                    cardHexColor = \"#C7CEEA\";\r\n                    break;\r\n                default:\r\n                    cardHexColor = \"\"\r\n                    break;\r\n            }\r\n            return cardHexColor;\r\n        }\r\n  },\r\n  methods: {\r\n    tileClickedEvent(){\r\n      if(typeof this.tileData.navigation === 'undefined' || this.tileData.navigation === '')\r\n      {\r\n        this.$emit('speakText', this.tileData.text)\r\n      }else{\r\n        this.$router.push({name: 'tilePadWithRoute', params: {layout: this.tileData.navigation }})\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components/TilePad"}]}